Cái này code về check pin của xe điều khiển dò lại code
#include <WiFi.h>
#include <WebServer.h>

const char* ssid = "Your_SSID";
const char* password = "Your_PASSWORD";

#define BATTERY_PIN 34  // Chân đọc mức pin (ADC)

WebServer server(80);

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Đang kết nối WiFi...");
    }
    Serial.println("WiFi Kết Nối Thành Công!");
    Serial.print("IP: ");
    Serial.println(WiFi.localIP());

    pinMode(BATTERY_PIN, INPUT);

    // API trả về mức pin
    server.on("/battery", []() {
        int adcValue = analogRead(BATTERY_PIN);
        float voltage = adcValue * (3.3 / 4095.0) * 2; // Chuyển đổi ADC thành điện áp
        int batteryPercent = map(voltage * 100, 300, 420, 0, 100); // Chuyển đổi thành %
        batteryPercent = constrain(batteryPercent, 0, 100); // Giới hạn từ 0-100%
        
        String json = "{\"battery\":" + String(batteryPercent) + "}";
        server.send(200, "application/json", json);
    });

    server.begin();
}

void loop() {
    server.handleClient();
}




//Đây là đo khoảng cách của sensor check lại code
#include <WiFi.h>
#include <WebServer.h>

const char* ssid = "Your_SSID";      // Nhập WiFi của bạn
const char* password = "Your_PASSWORD";

#define TRIG_PIN 5  
#define ECHO_PIN 18 

WebServer server(80);

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Đang kết nối WiFi...");
    }
    Serial.println("Kết nối thành công!");
    Serial.print("IP: ");
    Serial.println(WiFi.localIP());

    pinMode(TRIG_PIN, OUTPUT);
    pinMode(ECHO_PIN, INPUT);

    // API trả về khoảng cách đo được
    server.on("/distance", []() {
        float distance = getDistance();
        String json = "{\"distance\":" + String(distance) + "}";
        server.send(200, "application/json", json);
    });

    // Trả về trang HTML + CSS + JavaScript
    server.on("/", []() {
        server.send(200, "text/html", createHTML());
    });

    server.begin();
}

// Hàm đo khoảng cách
float getDistance() {
    digitalWrite(TRIG_PIN, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG_PIN, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);
    long duration = pulseIn(ECHO_PIN, HIGH);
    return duration * 0.034 / 2;
}

// Đây là đo tốc độ của xe và cái cái quãng đường là hắn sẽ lấy 
tốc độ * thời gian = quãng đường sẽ hiện bên html
#include <WiFi.h>
#include <WebServer.h>

const char* ssid = "Your_SSID";
const char* password = "Your_PASSWORD";

#define SPEED_SENSOR_PIN 35  // Chân đọc tốc độ

WebServer server(80);

volatile int pulseCount = 0;
unsigned long lastTime = 0;
float speed = 0.0; // Tốc độ cm/s

void IRAM_ATTR countPulse() {
    pulseCount++;  // Đếm số xung từ cảm biến tốc độ
}

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Đang kết nối WiFi...");
    }
    Serial.println("WiFi kết nối thành công!");
    Serial.print("IP: ");
    Serial.println(WiFi.localIP());

    pinMode(SPEED_SENSOR_PIN, INPUT_PULLUP);
    attachInterrupt(digitalPinToInterrupt(SPEED_SENSOR_PIN), countPulse, RISING);

    // API trả về tốc độ
    server.on("/speed", []() {
        unsigned long currentTime = millis();
        unsigned long timeElapsed = currentTime - lastTime;
        if (timeElapsed > 1000) { // Cập nhật mỗi giây
            speed = (pulseCount * 10.0); // Giả sử mỗi xung tương ứng với 10cm/s
            pulseCount = 0;
            lastTime = currentTime;
        }
        String json = "{\"speed\":" + String(speed) + "}";
        server.send(200, "application/json", json);
    });

    server.begin();
}

void loop() {
    server.handleClient();
}
